<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Address" xml:space="preserve">
    <value>Address</value>
  </data>
  <data name="Agreement of Rent" xml:space="preserve">
    <value>Agreement of Rent</value>
  </data>
  <data name="Agreement to Sale" xml:space="preserve">
    <value>Agreement to Sale</value>
  </data>
  <data name="Amount of Conversion Tax" xml:space="preserve">
    <value>Amount of Conversion Tax</value>
  </data>
  <data name="Amount of Proccessing fees" xml:space="preserve">
    <value>Amount of Proccessing fees</value>
  </data>
  <data name="Application No" xml:space="preserve">
    <value>Application No</value>
  </data>
  <data name="Area of Uncultivated Land" xml:space="preserve">
    <value>Area of Uncultivated Land</value>
  </data>
  <data name="Borrower's Email" xml:space="preserve">
    <value>Borrower's Email</value>
  </data>
  <data name="Borrower's Name" xml:space="preserve">
    <value>Borrower's Name</value>
  </data>
  <data name="Cash" xml:space="preserve">
    <value>Cash</value>
  </data>
  <data name="Circle Officer" xml:space="preserve">
    <value>Circle Officer</value>
  </data>
  <data name="City Survey" xml:space="preserve">
    <value>City Survey</value>
  </data>
  <data name="City Talati" xml:space="preserve">
    <value>City Talati</value>
  </data>
  <data name="Complete" xml:space="preserve">
    <value>Complete</value>
  </data>
  <data name="Consent document" xml:space="preserve">
    <value>Consent document</value>
  </data>
  <data name="Conversion Tax" xml:space="preserve">
    <value>Conversion Tax</value>
  </data>
  <data name="Date" xml:space="preserve">
    <value>Date</value>
  </data>
  <data name="Date of letter for payment of Conversion Tax" xml:space="preserve">
    <value>Date of letter for payment of Conversion Tax</value>
  </data>
  <data name="Declaration" xml:space="preserve">
    <value>Declaration</value>
  </data>
  <data name="Details of Conversion Tax Amount received" xml:space="preserve">
    <value>Details of Conversion Tax Amount received</value>
  </data>
  <data name="District" xml:space="preserve">
    <value>District</value>
  </data>
  <data name="Document Details" xml:space="preserve">
    <value>Document Details</value>
  </data>
  <data name="Document No." xml:space="preserve">
    <value>Document No.</value>
  </data>
  <data name="Document Payment" xml:space="preserve">
    <value>Document Payment</value>
  </data>
  <data name="Document Type" xml:space="preserve">
    <value>Document Type</value>
  </data>
  <data name="e-Dhara Center" xml:space="preserve">
    <value>e-Dhara Center</value>
  </data>
  <data name="Email" xml:space="preserve">
    <value>Email</value>
  </data>
  <data name="Entry Details in Revenue Record" xml:space="preserve">
    <value>Entry Details in Revenue Record</value>
  </data>
  <data name="Gift" xml:space="preserve">
    <value>Gift</value>
  </data>
  <data name="Gram Panchayat" xml:space="preserve">
    <value>Gram Panchayat</value>
  </data>
  <data name="Layout" xml:space="preserve">
    <value>Layout</value>
  </data>
  <data name="Mail Instred into the Application" xml:space="preserve">
    <value>Mail Instred into the Application</value>
  </data>
  <data name="Mamlatdar" xml:space="preserve">
    <value>Mamlatdar</value>
  </data>
  <data name="Measured or not" xml:space="preserve">
    <value>Measured or not</value>
  </data>
  <data name="Measurement Application" xml:space="preserve">
    <value>Measurement Application</value>
  </data>
  <data name="Measurement Application Number" xml:space="preserve">
    <value>Measurement Application Number</value>
  </data>
  <data name="Mobile Number" xml:space="preserve">
    <value>Mobile Number</value>
  </data>
  <data name="Mobile Number Instred into the Application" xml:space="preserve">
    <value>Mobile Number Instred into the Application</value>
  </data>
  <data name="Mortgage Deed" xml:space="preserve">
    <value>Mortgage Deed</value>
  </data>
  <data name="Name" xml:space="preserve">
    <value>Name</value>
  </data>
  <data name="Note Number" xml:space="preserve">
    <value>Note Number</value>
  </data>
  <data name="Ok" xml:space="preserve">
    <value>Ok</value>
  </data>
  <data name="Online" xml:space="preserve">
    <value>Online</value>
  </data>
  <data name="Opinion" xml:space="preserve">
    <value>Opinion</value>
  </data>
  <data name="Other" xml:space="preserve">
    <value>Other</value>
  </data>
  <data name="Other(if any)" xml:space="preserve">
    <value>Other(if any)</value>
  </data>
  <data name="Password" xml:space="preserve">
    <value>Password</value>
  </data>
  <data name="Payment Receipt" xml:space="preserve">
    <value>Payment Receipt</value>
  </data>
  <data name="Pending" xml:space="preserve">
    <value>Pending</value>
  </data>
  <data name="Property Details" xml:space="preserve">
    <value>Property Details</value>
  </data>
  <data name="Reference Number for payment of Conversion Tax" xml:space="preserve">
    <value>Reference Number for payment of Conversion Tax</value>
  </data>
  <data name="Reference Number for payment of Measurement Fees" xml:space="preserve">
    <value>Reference Number for payment of Measurement Fees</value>
  </data>
  <data name="Reference Number for payment of Proccessing Fees" xml:space="preserve">
    <value>Reference Number for payment of Proccessing Fees</value>
  </data>
  <data name="Release Deed" xml:space="preserve">
    <value>Release Deed</value>
  </data>
  <data name="Remaining" xml:space="preserve">
    <value>Remaining</value>
  </data>
  <data name="Sales document" xml:space="preserve">
    <value>Sales document</value>
  </data>
  <data name="Select" xml:space="preserve">
    <value>Select</value>
  </data>
  <data name="Seller's Name" xml:space="preserve">
    <value>Seller's Name</value>
  </data>
  <data name="Survey Number" xml:space="preserve">
    <value>Survey Number</value>
  </data>
  <data name="Taluka" xml:space="preserve">
    <value>Taluka</value>
  </data>
  <data name="Uncultivated Application" xml:space="preserve">
    <value>Uncultivated Application</value>
  </data>
  <data name="Village" xml:space="preserve">
    <value>Village</value>
  </data>
</root>